{"version":3,"sources":["components/Header/Header.js","redux/actions.js","components/SearchBox/SearchBox.js","components/MovieItem/MovieItem.js","components/Movies/Movies.js","components/Favorites/Favorites.js","pages/MainPage/MainPage.js","pages/ListPage/ListPage.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["Header","className","Component","fetchMovies","title","dispatch","fetch","then","res","json","data","type","payload","movies","Search","postList","console","log","savedList","method","headers","body","JSON","stringify","listID","saveFavList","id","SearchBox","state","searchLine","searchLineChangeHandler","e","setState","target","value","searchBoxSubmitHandler","preventDefault","props","this","onSubmit","placeholder","onChange","disabled","connect","MovieItem","Title","Year","Poster","imdbID","src","alt","onClick","addToFavList","favList","Movies","map","movie","key","Favorites","isSaved","changeFavListName","getIdArray","item","saveList","removeFromFavList","to","length","MainPage","ListPage","match","params","fetchIdList","listMovies","href","rel","newMovieArray","el","Promise","all","allMovies","getList","App","path","exact","component","React","initialState","createStore","action","favListState","find","favListMatch","updatedList","filter","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.a733b122.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\n\nclass Header extends Component {\n    render() { \n        return (\n            <header className=\"header\">\n                <h1 className=\"header__title\">\n                    MustSee\n                </h1>\n            </header>\n        );\n    }\n}\n \nexport default Header;","export function searchMovies(movies) {\r\n    return {\r\n        type: \"SEARCH_MOVIE\",\r\n        payload: {\r\n            movies: movies,\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchMovies(title) {\r\n    return function (dispatch) {\r\n        fetch(`http://www.omdbapi.com/?s=${title}&apikey=5cffeb2`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            dispatch(searchMovies(data.Search));\r\n        });\r\n    };\r\n}\r\nexport function addToFavList (id) {\r\n    return {\r\n        type: \"ADD_TO_FAVOURITE_LIST\",\r\n        payload: {\r\n            id: id,\r\n        }\r\n    }\r\n}\r\nexport function removeFromFavList(id) {\r\n    return {\r\n        type: \"REMOVE_FROM_FAVOURITE_LIST\",\r\n        payload: {\r\n            id: id,\r\n        }\r\n    }\r\n}\r\n\r\nexport function saveFavList(title, listID) {\r\n    console.log(title)\r\n    return {\r\n      type: \"SAVE_FAVOURITE_LIST\",\r\n      payload: {\r\n        title: title,\r\n        listID: listID,\r\n      },\r\n    };\r\n}\r\n\r\nexport function postList(title, movies) {\r\n    console.log(title, movies)\r\n    return function (dispatch) {\r\n        let savedList = {\r\n        title: title,\r\n        movies: movies,\r\n        };\r\n        fetch(`https://acb-api.algoritmika.org/api/movies/list/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(savedList),\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log(data);\r\n            dispatch(saveFavList(data.title, data.id));\r\n        });\r\n    };\r\n}\r\n\r\nexport function getList(title, movies) {\r\n    return {\r\n      type: \"GET_LIST\",\r\n      payload: {\r\n        title: title,\r\n        listMovies: movies, \r\n      },\r\n    };\r\n}\r\n\r\nexport function fetchIdList(id) {\r\n    return function (dispatch) {\r\n        let title;\r\n      fetch(`https://acb-api.algoritmika.org/api/movies/list/${id}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log(data.title, data.movies);\r\n            title = data.title;\r\n            let newMovieArray = data.movies.map((el) => {\r\n                return fetch(`http://www.omdbapi.com/?i=${el}&apikey=5cffeb2`)\r\n                .then((res) => res.json())\r\n            })\r\n            let allMoviesPromise = Promise.all(newMovieArray)\r\n            return allMoviesPromise \r\n          \r\n        \r\n        }).then((allMovies) => {\r\n            dispatch(getList(title, allMovies));\r\n        })\r\n    };\r\n}\r\n","import React, { Component } from 'react';\nimport './SearchBox.css';\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../../redux/actions\";\n\nclass SearchBox extends Component {\n    state = {\n        searchLine: ''\n    }\n    searchLineChangeHandler = (e) => {\n        this.setState({ searchLine: e.target.value });\n    }\n    searchBoxSubmitHandler = (e) => {\n        e.preventDefault();\n        this.props.dispatch(fetchMovies(this.state.searchLine));\n    }\n    render() {\n        const { searchLine } = this.state;\n\n        return (\n            <div className=\"search-box\">\n                <form className=\"search-box__form\" onSubmit={this.searchBoxSubmitHandler}>\n                    <label className=\"search-box__form-label\">\n                        Искать фильм по названию:\n                        <input\n                            value={searchLine}\n                            type=\"text\"\n                            className=\"search-box__form-input\"\n                            placeholder=\"Например, Shawshank Redemption\"\n                            onChange={this.searchLineChangeHandler}\n                        />\n                    </label>\n                    <button\n                        type=\"submit\"\n                        className=\"search-box__form-submit\"\n                        disabled={!searchLine}\n                    >\n                        Искать\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        dispatch: dispatch\n    }\n}\nexport default connect(null, mapDispatchToProps)(SearchBox);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './MovieItem.css';\nimport { addToFavList } from \"../../redux/actions\";\n\nclass MovieItem extends Component {\n    \n    render() {\n        const { Title, Year, Poster, imdbID } = this.props;\n        return (\n            <article className=\"movie-item\">\n                <img className=\"movie-item__poster\" src={Poster} alt={Title} />\n                <div className=\"movie-item__info\">\n                    <h3 className=\"movie-item__title\">{Title}&nbsp;({Year})</h3>\n                    <button \n                        type=\"button\" \n                        className=\"movie-item__add-button\"\n                        onClick={() => {\n                            this.props.addToFavList(imdbID);\n                          }}\n                          >\n                              Добавить в список\n                          </button>\n                </div>\n            </article>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        favList: state.favList\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addToFavList: (imdbID) => {\n            dispatch(addToFavList(imdbID));\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieItem);","import React, { Component } from 'react';\nimport MovieItem from '../MovieItem/MovieItem';\nimport './Movies.css';\nimport { connect } from 'react-redux';\n\nclass Movies extends Component {\n    \n    render() { \n        return ( \n            <ul className=\"movies\">\n                {this.props.movies.map((movie) => (\n                    <li className=\"movies__item\" key={movie.imdbID}>\n                        <MovieItem {...movie} />\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n      movies: state.movies,\n    };\n};\n  \nexport default connect(mapStateToProps)(Movies);","import React, { Component } from 'react';\nimport './Favorites.css';\nimport { connect } from \"react-redux\";\nimport { removeFromFavList, postList } from \"../../redux/actions\";\nimport { Link } from \"react-router-dom\";\n\n\nclass Favorites extends Component {\n    state = {\n        title: \"Новый список\",\n        isSaved: false\n\n    }\n    changeFavListName = (e) => {\n         this.setState({ title: e.target.value });\n    };\n\n    getIdArray = () => {\n        let favIdArray = this.props.favList.map((item) => { \n        return item.imdbID;\n        });\n        return favIdArray;\n    }\n\n    saveList = () => {\n        this.setState({ isSaved: true });\n        this.props.postList(this.state.title, this.getIdArray());\n    };\n\n    render() {\n        const { title, isSaved } = this.state;\n        return (\n            <div className=\"favorites\">\n                <input value={title} className=\"favorites__name\" onChange={this.changeFavListName} disabled={this.state.isSaved}/>\n                <ul className=\"favorites__list\">\n                    {this.props.favList.map((item) => {\n                        return <li key={item.imdbID}>{item.Title} ({item.Year})\n                        <button className=\"remove-favorite-movie\" onClick={() =>\n                          this.props.removeFromFavList(item.imdbID)\n                        }>\n                        X\n                      </button></li>;\n                    })}\n                </ul>\n                {!isSaved ? \n                (<button type=\"button\" className=\"favorites__save\" \n                    onClick={this.saveList} disabled={title.length === 0 || this.props.favList.length === 0}>\n                    Сохранить список</button>) :\n                (<Link to={\"/list/\" + this.props.listID} target=\"_blank\">{title}</Link>)\n                }\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return { \n        favList: state.favList,\n        listID: state.listID,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        removeFromFavList: (id) => {\n        dispatch(removeFromFavList(id));\n      },\n        postList: (title, movies) => {\n            console.log(title)\n        dispatch(postList(title, movies));\n      },\n    };\n  };\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","import React, { Component } from 'react';\nimport './MainPage.css';\nimport Header from '../../components/Header/Header';\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport Movies from '../../components/Movies/Movies';\nimport Favorites from '../../components/Favorites/Favorites';\n\nclass MainPage extends Component {\n    render() { \n        return (\n            <div className=\"main-page\">\n                <Header />\n                <main className=\"main-page__content\">\n                    <section className=\"main-page__main-section\">\n                        <div className=\"main-page__search-box\">\n                            <SearchBox />\n                        </div>\n                        <div className=\"main-page__movies\">\n                            <Movies />\n                        </div>\n                    </section>\n                    <aside className=\"main-page__favorites\">\n                        <Favorites />\n                    </aside>\n                </main>\n            </div>\n        );\n    }\n}\n \nexport default MainPage;","import React, { Component } from 'react';\nimport './ListPage.css';\nimport { connect } from \"react-redux\";\nimport Header from \"../../components/Header/Header\";\nimport { fetchIdList } from \"../../redux/actions\";\n\nclass ListPage extends Component {\n    \n    componentDidMount() {\n        const id = this.props.match.params.id;\n        console.log(id);\n        this.props.fetchIdList(id);\n        // TODO: запрос к сервер на получение списка\n        // TODO: запросы к серверу по всем imdbID\n    }\n    render() { \n        console.log(this.props);\n        return (\n            <div> \n                <Header />\n                <div className=\"list-page\">\n                    \n                    <h1 className=\"list-page__title\">{this.props.title}</h1>\n                    <ul>\n                        {this.props.listMovies.map((item) => {\n                            return (\n                                <li key={item.imdbID} className=\"list-page__single-movie\">\n                                    <img src={item.Poster} className=\"single-movie__poster\" alt={item.Title} /><a\n                                href={`https://www.imdb.com/title/${item.imdbID}/`}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"list-page__link-imdb\"\n                            ><h3 className=\"movie-item__title\">{item.Title} ({item.Year})</h3></a>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      title: state.title,\n      listMovies: state.listMovies,\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => ({\n    fetchIdList: (id) => dispatch(fetchIdList(id)),\n    \n    \n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPage);","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport MainPage from './pages/MainPage/MainPage';\nimport ListPage from './pages/ListPage/ListPage';\n\nimport './reset.css';\nimport './common.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Route path=\"/\" exact component={MainPage} />\n        <Route path=\"/list/:id\" exact component={ListPage} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","let initialState = {\r\n    movies: [],\r\n    favList: [],\r\n    listID: '',\r\n    listMovies: [],\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    if (action.type === \"SEARCH_MOVIE\") {\r\n        return {\r\n            ...state,\r\n            movies: action.payload.movies,\r\n        }\r\n        \r\n    }\r\n\r\n    if (action.type === \"ADD_TO_FAVOURITE_LIST\") {\r\n        const favListState = { ...state };\r\n        const match = favListState.movies.find((item) => item.imdbID === action.payload.id);\r\n        const favListMatch = favListState.favList.find((item) => item.imdbID === action.payload.id);\r\n\r\n        if (match && !favListMatch) {\r\n            favListState.favList = [...favListState.favList, { ...match }];\r\n        }\r\n        return favListState;\r\n    }\r\n\r\n    if (action.type === \"REMOVE_FROM_FAVOURITE_LIST\") {\r\n        const updatedList = state.favList.filter((item) => {\r\n            return item.imdbID !== action.payload.id\r\n        })\r\n        return {...state, favList: updatedList}\r\n    };\r\n\r\n    if (action.type === \"SAVE_FAVOURITE_LIST\") {\r\n        return {\r\n            ...state,\r\n            title: action.payload.title,\r\n            listID: action.payload.listID\r\n        };\r\n    };\r\n    \r\n    if (action.type === \"GET_LIST\") { \r\n      return {\r\n        ...state,\r\n        title: action.payload.title,\r\n        listMovies: action.payload.listMovies,\r\n      };\r\n    };\r\n    \r\n    return state;\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\nexport default createStore(reducer, applyMiddleware(thunk));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}